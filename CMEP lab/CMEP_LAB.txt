bisection_method:

#include<stdio.h>
#include<math.h>

double f(double x)
{
    return(x*x-x-6);
}

int main()
{
    double x1,x2,x3,tol;

    printf("enter the value of x1,x2,&tol:\n");
    scanf("%lf %lf %lf",&x1,&x2,&tol);

    int count=1;
    if ((f(x1)*f(x3))<0)
    {
        do
        {
            x3=(x1+x2)/2;
            printf("\n %d %lf %lf",count,x1,x2);
            if((f(x3)*f(x1))<0)
                x2=x3;
            else
                x1=x3;
            printf("%lf %lf",x3,f(x3));
            count++;
        }
        while(!((fabs(x1-x2)<2*tol)|| (f(x3)==0)));
        printf("\n the root is %lf",x3);
    }

}




false_method:

#include<stdio.h>
#include<math.h>

double f(double x)
{
    return(x*x-9*x+20);
}

int main()
{
    double x1,x2,x3,tol;

    printf("enter the value of x1,x2,&tol:\n");
    scanf("%lf %lf %lf",&x1,&x2,&tol);

    int count=1;
    if((f(x1)*f(x2))<0)
    {
        do
        {
            x3=x2-f(x2)*(x1-x2)/(f(x1)-f(x2));
            printf("\n %d %lf %lf",count,x1,x2);

            if((f(x1)*f(x2))<0)
                x2=x3;
            else
                x1=x3;
            printf("%lf %lf \n",x3,f(x3));
            count++;
        }
        while(!((fabs(x1-x2)<2*tol)||(f(x3)==0)));
        printf("\n the root is %lf",x3);
    }
}




iteration_method:

#include<stdio.h>
#include<math.h>

double f(double x)
{
    return(x*x-5*x+6);
}

double g(double x)
{
    return((x*x+6)/5);
}

int main()
{
    double x1,x2,t;

    printf("enter the value of x1,&t \n");
    scanf("%lf %lf",&x1,&t);

    do
    {
        x2=x1;
        x1=g(x1);
    }
    while(!(fabs(x1-x2))<t);
    printf("the root is %lf",x2);
}




Newton_raphson_method:

#include<stdio.h>
#include<math.h>

double f(double x)
{
    return(x*x-5*x+6);
}

double g(double x)
{
    return(2*x-5);
}

int main()
{
    double x1,x2,tol;

    printf("enter the value of x1&tol:\n");
    scanf("%lf %lf",&x1,&tol);

    if((f(x1)!=0)&(g(x1)!=0))
    do
    {
        x2=x1;
        x1=x1-(f(x1)/g(x1));
    }
    while(!(fabs(x1-x2))<tol);
    printf("\n the root is %lf",x2);
}

